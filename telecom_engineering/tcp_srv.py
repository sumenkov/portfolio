'''
Необходимо сделать tcp сервер, который распознаёт заданный формат данных и отображает его в требуемом формате.
Обязательна запись данных во внешний файл. Интерфейс и способ отображения на выбор разработчика.
Формат данных BBBBxNNxHH:MM:SS.zhqxGGCR Где
BBBB - номер участника
x - пробельный символ
NN - id канала
HH - Часы MM - минуты SS - секунды zhq - десятые сотые тысячные
GG - номер группы
CR - «возврат каретки» (закрывающий символ)
Пример данных: 0002 C1 01:13:02.877 00[CR]
Выводим «спортсмен, нагрудный номер BBBB прошёл отсечку NN в «время»" до десятых, сотые и тысячные отсекаются.
Только для группы 00. Для остальных групп данные не отображаются, но пишутся в лог полностью.
Язык Python, версия не ниже 3.2 Передача данных должна поддерживаться с помощью telnet клиента.
'''

import logging
import re
import socket

srv = socket.socket()
# прослушиваем 15 порт на всех хостах
srv.bind(('0.0.0.0', 15))
# максимальное число активных соединений (не ограничено)
srv.listen(100)

logging.basicConfig(
    filename="logfile.log",
    # пишем только полученные данные, по ТЗ
    format='%(message)s',
    level=logging.INFO,
)


def run_prm():
    try:
        print(f'Сервер запущен на порту 15, нажмите Ctrl + C, чтобы остановить сервер.')
        while True:
            # принимаем соединение
            conn, addr = srv.accept()
            # начинаем слушать входящие подключения
            while True:
                # читаем, что получили, ограничиваем размер получаемых данных до максимально допустимого, по ТЗ
                data = conn.recv(24).decode("utf-8")
                # Проверяем формат полученных данных
                if re.fullmatch('\d{4}\s\w{2}\s\d{2}:\d{2}:\d{2}\.\d{3}\s\d{2}\n', data):
                    # отсекаем знак "возврата каретки", иначе при записи в лог получим двойной возврат
                    line = data.rstrip()
                    # для удобства вывода делим строку на переменные
                    BBBB, NN, HHMM, GG = line.split(" ")
                    # отбираем нулевую группу для вывода информации, по ТЗ
                    if GG == "00":
                        print(f'спортсмен, нагрудный номер {BBBB} прошёл отсечку {NN} в {HHMM[:-2]}')
                        # Записываем полученные данные в лог
                        logging.info(line)
                    else:
                        # Записываем полученные данные в лог
                        logging.info(line)
                # если telnet перестал отдавать, перестаем слушать его подключение
                elif not data:
                    break

    except Exception:
        # Если srv "упал", запишем причину в лог
        logging.exception("Error:")
        srv.close()


if __name__ == '__main__':
    run_prm()
